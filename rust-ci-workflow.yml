name: Rust CI

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'crates/**'
      - 'test_data/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
      - '.github/workflows/rust-ci.yml'
  push:
    branches: [ main ]
    paths:
      - 'crates/**'
      - 'test_data/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
      - '.github/workflows/rust-ci.yml'

env:
  CARGO_TERM_COLOR: always

jobs:
  rust-quality-checks:
    name: Rust Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Check formatting
      run: cargo fmt --all -- --check
      
    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Build project
      run: cargo build --verbose

    - name: Run tests
      run: cargo test --verbose

  # Separate job for required status checks
  rust-ci-status:
    name: Rust CI Status
    runs-on: ubuntu-latest
    needs: [rust-quality-checks]
    if: always()
    
    steps:
    - name: Check all jobs passed
      if: needs.rust-quality-checks.result != 'success'
      run: |
        echo "One or more Rust quality checks failed"
        exit 1
    
    - name: All checks passed
      run: echo "All Rust quality checks passed!"